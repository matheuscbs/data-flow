# Usar a imagem oficial do Python 3.9-slim
FROM python:3.9-slim

# Instalar dependências necessárias, incluindo Java e utilitários necessários
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    wget \
    curl \
    ca-certificates \
    git \
    default-jdk \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Verificar a instalação do Java e configurar JAVA_HOME
RUN java -version && \
    echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> /etc/environment

# Definir o diretório de trabalho
WORKDIR /app

# Instalar Poetry usando pip
RUN pip install poetry

# Configurar Poetry para não criar ambientes virtuais
RUN poetry config virtualenvs.create false

# Copiar os arquivos de configuração do Poetry primeiro para melhor aproveitamento do cache
COPY app/pyproject.toml app/poetry.lock app/poetry.toml ./

# Copiar os arquivos do projeto para o contêiner
COPY app/data_flow ./data_flow

# Instalar dependências do projeto usando Poetry
RUN poetry install --no-interaction --no-ansi

# Comando para executar o aplicativo
CMD ["poetry", "run", "python", "data_flow/etl.py"]
